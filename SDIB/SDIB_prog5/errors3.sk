int n = 10;
int a = 20; 
int b = 15; 
int c = 2;
int correct()
{
    int sum;
    int count=0;
    int i,j;
    for(i=0;i<=a;i++)
    {
        if(i%2!=1){
            for(j=0;j<=b;j++)
             {
                sum=0;
                sum=(n)-(j*1);
                if(sum>=0){
                    if((sum%2 ==0)&&((sum/2)<=c))
                        count++;
                }
            }
        }
    }
    return count;
}
bit check1(int i) {
    if({|i%2(< | > | <= | >= | == | !=)1|}) 
        return ??(1);
    return ??(1);
}
bit check2(int sum) {
    if({|sum(< | > | <= | >= | == | !=)0|}) 
        return ??(1);
    return ??(1);
}
int wrong()
{
    int sum;
    int count =0;
    int i,j;
    for(i=0;i<=a;i++)
    {
        if(check1(i)){
            for(j=0;j<=b;j++)
            {
                sum=0;
                sum=(n)-(j*1);
                if(check2(sum)){
                    if((sum%2==0)&&((sum/2)<=c))
                        count++;
                }
            }
        }
    }
    return count;
}
harness void main(){
	assert correct() == wrong();
}
